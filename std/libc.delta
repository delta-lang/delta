// stdlib.h
extern void&? malloc(uint64 size);
extern void free(void&? ptr);
extern never abort();
extern never exit(int status);

// stdio.h
struct FILE {}
extern int printf(const charSUOJA format, ...);
extern int fprintf(FILE& stream, const charSUOJA format, ...);
extern int sprintf(charSUOJA str, const charSUOJA format, ...);
extern int getchar();
extern FILE&? fopen(const charSUOJA filename, const charSUOJA mode);
#if Windows
extern FILE&? _fdopen(int fd, const charSUOJA mode);
FILE&? fdopen(int fd, const charSUOJA mode) { return _fdopen(fd, mode); }
#else
extern FILE&? fdopen(int fd, const charSUOJA mode);
#endif
extern int fgetc(FILE& file);
extern uint64 fread(void& data, uint64 size, uint64 count, FILE& file);
extern void fwrite(const void& data, uint64 size, uint64 count, FILE& file);
extern void fseek(FILE& file, int64 offset, int origin);
extern int64 ftell(FILE& file);
extern int fclose(FILE& file);
extern int fflush(FILE& file);
extern int feof(FILE& file);
extern int fputc(int c, FILE& file);
extern int remove(const charSUOJA filename);
extern int ungetc(int c, FILE& file);
extern void rewind(FILE& file);
const SEEK_SET = 0;
const SEEK_CUR = 1;
const SEEK_END = 2;

// string.h
extern uint64 strlen(const charSUOJA str);

// ctype.h
extern int isalnum(int ch);
extern int isalpha(int ch);
extern int islower(int ch);
extern int isupper(int ch);
extern int isdigit(int ch);
extern int isxdigit(int ch);
extern int iscntrl(int ch);
extern int isgraph(int ch);
extern int isspace(int ch);
extern int isblank(int ch);
extern int isprint(int ch);
extern int ispunct(int ch);
extern int tolower(int ch);
extern int toupper(int ch);
